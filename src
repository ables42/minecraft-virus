public class Time2 {
    private long secondsSinceMidnight;

    private long HMStoSSM (int hour, int minute, int second) {
        return hour * 3600 + minute * 60 + second;
    }

    public Time2() {
        this(0,0,0);
    }

    public Time2 (int hour) {
        this(hour, 0, 0);
    }

    public Time2(int hour, int minute) {
        this(hour,minute,0);
    }

    public Time2(int hour, int minute, int second) {
        secondsSinceMidnight = 0;
        setTime(hour, minute, second);
    }

    public void setTime(int hour, int minute, int second) {
        if(hour < 0 || hour >= 24) {
            throw new IllegalArgumentException("hour must be 0-23");
        }

        if(minute < 0 || minute >= 60) {
            throw new IllegalArgumentException("minute must be 0-59");
        }

        if(second < 0 || second >= 60) {
            throw new IllegalArgumentException("second must be 0-59");
        }

        secondsSinceMidnight = HMStoSSM(hour, minute, second);
    }

    public void setHour(int hour) {
        if(hour < 0 || hour >= 24) {
            throw new IllegalArgumentException("hour must be 0-23");
        }

        secondsSinceMidnight = (secondsSinceMidnight % 3600) + (3600 * hour);
    }

    public void setMinute(int minute) {
        if(minute < 0 || minute >= 60) {
            throw new IllegalArgumentException("minute must be 0-59");
        }

        secondsSinceMidnight = (secondsSinceMidnight % 60) + minute * 60;
    }

    public void setSecond(int second) {
        if(second < 0 || second >= 60) {
            throw new IllegalArgumentException("second must be 0-59");
        }

        secondsSinceMidnight = (secondsSinceMidnight - (secondsSinceMidnight % 60)) + second;
    }

    public int getHour() {
        return (int) Math.floorDiv(secondsSinceMidnight, 3600);
    }

    public int getMinute() {
        return 0;
    }

    public int getSecond() {
        return 0;
    }

    public String toUniversalString() {
        return String.format("%02d:%02d:%02d", getHour(), getMinute(), getSecond());
    }

    @Override
    public String toString() {
        return "";
    }
}

